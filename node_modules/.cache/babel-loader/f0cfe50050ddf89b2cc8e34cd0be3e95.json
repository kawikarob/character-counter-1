{"ast":null,"code":"var _jsxFileName = \"/Users/Kawika 1/code/character-counter/src/App.js\",\n    _s = $RefreshSig$();\n\n// import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [textValue, setTextValue] = useState(\"\");\n  const [characters, setCharacters] = useState([]);\n  const [topFive, setTopFive] = useState(); // Character Count //\n\n  const count = text => {\n    const string = text;\n    const seen = new Set();\n    let order = \"\";\n    const count = {};\n\n    for (let i = 0; i < string.length; i++) {\n      let char = string[i];\n      count[char] = count[char] === undefined ? 1 : count[char] + 1;\n\n      if (!seen.has(char)) {\n        order += char;\n        seen.add(char);\n      }\n    }\n\n    let out = [];\n\n    for (let i = 0; i < order.length; i++) {\n      let char = order[i];\n      let countOfChar = count[char];\n      out.push({\n        character: char,\n        count: countOfChar\n      });\n    }\n\n    setCharacters(out); // Top 5 Characters //\n\n    let sortedArray = [];\n\n    for (let char in count) {\n      sortedArray.push([char, count[char]]);\n    }\n\n    sortedArray.sort((a, b) => b[1] - a[1]);\n    let top5sorted = \"\";\n\n    for (let i = 0; i < sortedArray.length; i++) {\n      top5sorted += sortedArray[i][0];\n      if (top5sorted.length === 5) break;\n    }\n\n    setTopFive(top5sorted);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-10 pb-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold text-red-600\",\n          children: \"TOP SECRET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-bold p-2\",\n          children: \"Character Counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        style: {\n          width: \"50%\",\n          height: \"50%\",\n          borderColor: \"black\",\n          borderWidth: \"3px\",\n          outline: \"none\",\n          overflow: \"auto\"\n        },\n        autoFocus: true,\n        placeholder: \"Enter Text Here\",\n        value: textValue,\n        onChange: e => {\n          setTextValue(e.target.value);\n          count(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-10\",\n      children: characters.map(character => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [character.character, \":\", character.count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rounded-full py-3 px-6 bg-green-500\",\n            children: topFive.includes(character.character) && \"Topfive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u1M+cdbBY9OEamUCX5/4IAzRhiU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Kawika 1/code/character-counter/src/App.js"],"names":["React","useState","App","textValue","setTextValue","characters","setCharacters","topFive","setTopFive","count","text","string","seen","Set","order","i","length","char","undefined","has","add","out","countOfChar","push","character","sortedArray","sort","a","b","top5sorted","width","height","borderColor","borderWidth","outline","overflow","e","target","value","map","includes"],"mappings":"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","sourcesContent":["// import \"./App.css\";\n\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [textValue, setTextValue] = useState(\"\");\n  const [characters, setCharacters] = useState([]);\n  const [topFive, setTopFive] = useState();\n\n  // Character Count //\n  const count = (text) => {\n    const string = text;\n\n    const seen = new Set();\n\n    let order = \"\";\n\n    const count = {};\n\n    for (let i = 0; i < string.length; i++) {\n      let char = string[i];\n\n      count[char] = count[char] === undefined ? 1 : count[char] + 1;\n\n      if (!seen.has(char)) {\n        order += char;\n        seen.add(char);\n      }\n    }\n\n    let out = [];\n    for (let i = 0; i < order.length; i++) {\n      let char = order[i];\n      let countOfChar = count[char];\n      out.push({\n        character: char,\n        count: countOfChar,\n      });\n    }\n    setCharacters(out);\n\n    // Top 5 Characters //\n    let sortedArray = [];\n    for (let char in count) {\n      sortedArray.push([char, count[char]]);\n    }\n    sortedArray.sort((a, b) => b[1] - a[1]);\n\n    let top5sorted = \"\";\n    for (let i = 0; i < sortedArray.length; i++) {\n      top5sorted += sortedArray[i][0];\n      if (top5sorted.length === 5) break;\n    }\n    setTopFive(top5sorted);\n  };\n\n  return (\n    <div>\n      <div className=\"pt-10 pb-10\">\n        <div className=\"text-center\">\n          <p className=\"text-2xl font-bold text-red-600\">TOP SECRET</p>\n          <p className=\"text-xl font-bold p-2\">Character Counter</p>\n        </div>\n      </div>\n      <div className=\"flex justify-center\">\n        <textarea\n          rows={\"10\"}\n          style={{\n            width: \"50%\",\n            height: \"50%\",\n            borderColor: \"black\",\n            borderWidth: \"3px\",\n            outline: \"none\",\n            overflow: \"auto\",\n          }}\n          autoFocus\n          placeholder=\"Enter Text Here\"\n          value={textValue}\n          onChange={(e) => {\n            setTextValue(e.target.value);\n            count(e.target.value);\n          }}\n        ></textarea>\n      </div>\n      <div className=\"flex justify-center space-x-10\">\n        {characters.map((character) => {\n          return (\n            <div>\n              <div>\n                {character.character}:{character.count}\n              </div>\n              <div className=\"rounded-full py-3 px-6 bg-green-500\">\n                {topFive.includes(character.character) && \"Topfive\"}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}